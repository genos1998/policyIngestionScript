// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package main

import (
	"context"
	"time"

	"github.com/Khan/genqlient/graphql"
)

// AddPolicyDefinitionAddPolicyDefinitionAddPolicyDefinitionPayload includes the requested fields of the GraphQL type AddPolicyDefinitionPayload.
type AddPolicyDefinitionAddPolicyDefinitionAddPolicyDefinitionPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns AddPolicyDefinitionAddPolicyDefinitionAddPolicyDefinitionPayload.NumUids, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionAddPolicyDefinitionAddPolicyDefinitionPayload) GetNumUids() *int {
	return v.NumUids
}

type AddPolicyDefinitionInput struct {
	Id               string               `json:"id"`
	OwnerOrg         *OrganizationRef     `json:"ownerOrg,omitempty"`
	OwnerTeam        *TeamRef             `json:"ownerTeam,omitempty"`
	OwnerApplication *ApplicationRef      `json:"ownerApplication,omitempty"`
	CreatedAt        *time.Time           `json:"createdAt"`
	UpdatedAt        *time.Time           `json:"updatedAt"`
	PolicyName       string               `json:"policyName"`
	Category         string               `json:"category"`
	Stage            string               `json:"stage"`
	Description      string               `json:"description"`
	ScheduledPolicy  *bool                `json:"scheduledPolicy"`
	Script           string               `json:"script"`
	DatasourceTool   []*DatasourceToolRef `json:"datasourceTool,omitempty"`
	Variables        string               `json:"variables"`
	ConditionName    string               `json:"conditionName"`
	Suggestion       string               `json:"suggestion"`
}

// GetId returns AddPolicyDefinitionInput.Id, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetId() string { return v.Id }

// GetOwnerOrg returns AddPolicyDefinitionInput.OwnerOrg, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetOwnerOrg() *OrganizationRef { return v.OwnerOrg }

// GetOwnerTeam returns AddPolicyDefinitionInput.OwnerTeam, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetOwnerTeam() *TeamRef { return v.OwnerTeam }

// GetOwnerApplication returns AddPolicyDefinitionInput.OwnerApplication, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetOwnerApplication() *ApplicationRef { return v.OwnerApplication }

// GetCreatedAt returns AddPolicyDefinitionInput.CreatedAt, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns AddPolicyDefinitionInput.UpdatedAt, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// GetPolicyName returns AddPolicyDefinitionInput.PolicyName, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetPolicyName() string { return v.PolicyName }

// GetCategory returns AddPolicyDefinitionInput.Category, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetCategory() string { return v.Category }

// GetStage returns AddPolicyDefinitionInput.Stage, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetStage() string { return v.Stage }

// GetDescription returns AddPolicyDefinitionInput.Description, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetDescription() string { return v.Description }

// GetScheduledPolicy returns AddPolicyDefinitionInput.ScheduledPolicy, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetScheduledPolicy() *bool { return v.ScheduledPolicy }

// GetScript returns AddPolicyDefinitionInput.Script, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetScript() string { return v.Script }

// GetDatasourceTool returns AddPolicyDefinitionInput.DatasourceTool, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetDatasourceTool() []*DatasourceToolRef { return v.DatasourceTool }

// GetVariables returns AddPolicyDefinitionInput.Variables, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetVariables() string { return v.Variables }

// GetConditionName returns AddPolicyDefinitionInput.ConditionName, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetConditionName() string { return v.ConditionName }

// GetSuggestion returns AddPolicyDefinitionInput.Suggestion, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionInput) GetSuggestion() string { return v.Suggestion }

// AddPolicyDefinitionResponse is returned by AddPolicyDefinition on success.
type AddPolicyDefinitionResponse struct {
	AddPolicyDefinition *AddPolicyDefinitionAddPolicyDefinitionAddPolicyDefinitionPayload `json:"addPolicyDefinition"`
}

// GetAddPolicyDefinition returns AddPolicyDefinitionResponse.AddPolicyDefinition, and is useful for accessing the field via an interface.
func (v *AddPolicyDefinitionResponse) GetAddPolicyDefinition() *AddPolicyDefinitionAddPolicyDefinitionAddPolicyDefinitionPayload {
	return v.AddPolicyDefinition
}

// AddPolicyEnforcementAddPolicyEnforcementAddPolicyEnforcementPayload includes the requested fields of the GraphQL type AddPolicyEnforcementPayload.
type AddPolicyEnforcementAddPolicyEnforcementAddPolicyEnforcementPayload struct {
	NumUids *int `json:"numUids"`
}

// GetNumUids returns AddPolicyEnforcementAddPolicyEnforcementAddPolicyEnforcementPayload.NumUids, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementAddPolicyEnforcementAddPolicyEnforcementPayload) GetNumUids() *int {
	return v.NumUids
}

type AddPolicyEnforcementInput struct {
	Policy              *PolicyDefinitionRef `json:"policy,omitempty"`
	EnforcedOrg         *OrganizationRef     `json:"enforcedOrg,omitempty"`
	EnforcedTeam        *TeamRef             `json:"enforcedTeam,omitempty"`
	EnforcedApplication *ApplicationRef      `json:"enforcedApplication,omitempty"`
	Status              *bool                `json:"status"`
	ForceApply          *bool                `json:"forceApply"`
	Severity            Severity             `json:"severity"`
	Action              string               `json:"action"`
	ConditionValue      string               `json:"conditionValue"`
	Environments        []*EnvironmentRef    `json:"environments,omitempty"`
	Tags                []*TagRef            `json:"tags,omitempty"`
	CreatedAt           *time.Time           `json:"createdAt"`
	UpdatedAt           *time.Time           `json:"updatedAt"`
}

// GetPolicy returns AddPolicyEnforcementInput.Policy, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetPolicy() *PolicyDefinitionRef { return v.Policy }

// GetEnforcedOrg returns AddPolicyEnforcementInput.EnforcedOrg, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetEnforcedOrg() *OrganizationRef { return v.EnforcedOrg }

// GetEnforcedTeam returns AddPolicyEnforcementInput.EnforcedTeam, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetEnforcedTeam() *TeamRef { return v.EnforcedTeam }

// GetEnforcedApplication returns AddPolicyEnforcementInput.EnforcedApplication, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetEnforcedApplication() *ApplicationRef {
	return v.EnforcedApplication
}

// GetStatus returns AddPolicyEnforcementInput.Status, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetStatus() *bool { return v.Status }

// GetForceApply returns AddPolicyEnforcementInput.ForceApply, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetForceApply() *bool { return v.ForceApply }

// GetSeverity returns AddPolicyEnforcementInput.Severity, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetSeverity() Severity { return v.Severity }

// GetAction returns AddPolicyEnforcementInput.Action, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetAction() string { return v.Action }

// GetConditionValue returns AddPolicyEnforcementInput.ConditionValue, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetConditionValue() string { return v.ConditionValue }

// GetEnvironments returns AddPolicyEnforcementInput.Environments, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetEnvironments() []*EnvironmentRef { return v.Environments }

// GetTags returns AddPolicyEnforcementInput.Tags, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetTags() []*TagRef { return v.Tags }

// GetCreatedAt returns AddPolicyEnforcementInput.CreatedAt, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns AddPolicyEnforcementInput.UpdatedAt, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementInput) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// AddPolicyEnforcementResponse is returned by AddPolicyEnforcement on success.
type AddPolicyEnforcementResponse struct {
	AddPolicyEnforcement *AddPolicyEnforcementAddPolicyEnforcementAddPolicyEnforcementPayload `json:"addPolicyEnforcement"`
}

// GetAddPolicyEnforcement returns AddPolicyEnforcementResponse.AddPolicyEnforcement, and is useful for accessing the field via an interface.
func (v *AddPolicyEnforcementResponse) GetAddPolicyEnforcement() *AddPolicyEnforcementAddPolicyEnforcementAddPolicyEnforcementPayload {
	return v.AddPolicyEnforcement
}

type ApplicationDeploymentRef struct {
	// id is randomly assigned
	Id                     string                     `json:"id"`
	Image                  []*ImageRef                `json:"image,omitempty"`
	ApplicationEnvironment *ApplicationEnvironmentRef `json:"applicationEnvironment,omitempty"`
	DeployedAt             *time.Time                 `json:"deployedAt"`
	// deploymentStage is an enum and can be discovered, current, previous or blocked
	DeploymentStage DeploymentStage `json:"deploymentStage"`
	// source is argo, spinnaker etc
	Source string `json:"source"`
	// component would be a service
	Component string `json:"component"`
	// user who deployed the image
	DeployedBy       string                        `json:"deployedBy"`
	ToolsUsed        *ToolsUsedRef                 `json:"toolsUsed,omitempty"`
	DeploymentRisk   *ApplicationDeploymentRiskRef `json:"deploymentRisk,omitempty"`
	PolicyRunHistory []*RunHistoryRef              `json:"policyRunHistory,omitempty"`
}

// GetId returns ApplicationDeploymentRef.Id, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetId() string { return v.Id }

// GetImage returns ApplicationDeploymentRef.Image, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetImage() []*ImageRef { return v.Image }

// GetApplicationEnvironment returns ApplicationDeploymentRef.ApplicationEnvironment, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetApplicationEnvironment() *ApplicationEnvironmentRef {
	return v.ApplicationEnvironment
}

// GetDeployedAt returns ApplicationDeploymentRef.DeployedAt, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetDeployedAt() *time.Time { return v.DeployedAt }

// GetDeploymentStage returns ApplicationDeploymentRef.DeploymentStage, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetDeploymentStage() DeploymentStage { return v.DeploymentStage }

// GetSource returns ApplicationDeploymentRef.Source, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetSource() string { return v.Source }

// GetComponent returns ApplicationDeploymentRef.Component, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetComponent() string { return v.Component }

// GetDeployedBy returns ApplicationDeploymentRef.DeployedBy, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetDeployedBy() string { return v.DeployedBy }

// GetToolsUsed returns ApplicationDeploymentRef.ToolsUsed, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetToolsUsed() *ToolsUsedRef { return v.ToolsUsed }

// GetDeploymentRisk returns ApplicationDeploymentRef.DeploymentRisk, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetDeploymentRisk() *ApplicationDeploymentRiskRef {
	return v.DeploymentRisk
}

// GetPolicyRunHistory returns ApplicationDeploymentRef.PolicyRunHistory, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRef) GetPolicyRunHistory() []*RunHistoryRef { return v.PolicyRunHistory }

type ApplicationDeploymentRiskRef struct {
	Id                    *string                   `json:"id"`
	SourceCodeAlertsScore *int                      `json:"sourceCodeAlertsScore"`
	BuildAlertsScore      *int                      `json:"buildAlertsScore"`
	ArtifactAlertsScore   *int                      `json:"artifactAlertsScore"`
	DeploymentAlertsScore *int                      `json:"deploymentAlertsScore"`
	ImageRiskStatus       RiskStatus                `json:"imageRiskStatus"`
	ApplicationDeployment *ApplicationDeploymentRef `json:"applicationDeployment,omitempty"`
}

// GetId returns ApplicationDeploymentRiskRef.Id, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRiskRef) GetId() *string { return v.Id }

// GetSourceCodeAlertsScore returns ApplicationDeploymentRiskRef.SourceCodeAlertsScore, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRiskRef) GetSourceCodeAlertsScore() *int {
	return v.SourceCodeAlertsScore
}

// GetBuildAlertsScore returns ApplicationDeploymentRiskRef.BuildAlertsScore, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRiskRef) GetBuildAlertsScore() *int { return v.BuildAlertsScore }

// GetArtifactAlertsScore returns ApplicationDeploymentRiskRef.ArtifactAlertsScore, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRiskRef) GetArtifactAlertsScore() *int { return v.ArtifactAlertsScore }

// GetDeploymentAlertsScore returns ApplicationDeploymentRiskRef.DeploymentAlertsScore, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRiskRef) GetDeploymentAlertsScore() *int {
	return v.DeploymentAlertsScore
}

// GetImageRiskStatus returns ApplicationDeploymentRiskRef.ImageRiskStatus, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRiskRef) GetImageRiskStatus() RiskStatus { return v.ImageRiskStatus }

// GetApplicationDeployment returns ApplicationDeploymentRiskRef.ApplicationDeployment, and is useful for accessing the field via an interface.
func (v *ApplicationDeploymentRiskRef) GetApplicationDeployment() *ApplicationDeploymentRef {
	return v.ApplicationDeployment
}

type ApplicationEnvironmentRef struct {
	// id is randomly assigned
	Id               string               `json:"id"`
	Environment      *EnvironmentRef      `json:"environment,omitempty"`
	Application      *ApplicationRef      `json:"application,omitempty"`
	DeploymentTarget *DeploymentTargetRef `json:"deploymentTarget,omitempty"`
	Namespace        string               `json:"namespace"`
	// toolsUsed is a comma-separated string that contains all the tools(source, build, artifact, deploy etc) for an app env
	ToolsUsed   string                      `json:"toolsUsed"`
	Deployments []*ApplicationDeploymentRef `json:"deployments,omitempty"`
	RiskStatus  *ApplicationRiskStatusRef   `json:"riskStatus,omitempty"`
	Metadata    []*KeyValueRef              `json:"metadata,omitempty"`
}

// GetId returns ApplicationEnvironmentRef.Id, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetId() string { return v.Id }

// GetEnvironment returns ApplicationEnvironmentRef.Environment, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetEnvironment() *EnvironmentRef { return v.Environment }

// GetApplication returns ApplicationEnvironmentRef.Application, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetApplication() *ApplicationRef { return v.Application }

// GetDeploymentTarget returns ApplicationEnvironmentRef.DeploymentTarget, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetDeploymentTarget() *DeploymentTargetRef {
	return v.DeploymentTarget
}

// GetNamespace returns ApplicationEnvironmentRef.Namespace, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetNamespace() string { return v.Namespace }

// GetToolsUsed returns ApplicationEnvironmentRef.ToolsUsed, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetToolsUsed() string { return v.ToolsUsed }

// GetDeployments returns ApplicationEnvironmentRef.Deployments, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetDeployments() []*ApplicationDeploymentRef {
	return v.Deployments
}

// GetRiskStatus returns ApplicationEnvironmentRef.RiskStatus, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetRiskStatus() *ApplicationRiskStatusRef { return v.RiskStatus }

// GetMetadata returns ApplicationEnvironmentRef.Metadata, and is useful for accessing the field via an interface.
func (v *ApplicationEnvironmentRef) GetMetadata() []*KeyValueRef { return v.Metadata }

type ApplicationRef struct {
	// id is randomly assigned
	Id                 string                       `json:"id"`
	Name               string                       `json:"name"`
	Roles              []*RoleRef                   `json:"roles,omitempty"`
	Environments       []*ApplicationEnvironmentRef `json:"environments,omitempty"`
	Team               *TeamRef                     `json:"team,omitempty"`
	Policies           []*PolicyDefinitionRef       `json:"policies,omitempty"`
	PolicyEnforcements []*PolicyEnforcementRef      `json:"policyEnforcements,omitempty"`
	Metadata           []*KeyValueRef               `json:"metadata,omitempty"`
}

// GetId returns ApplicationRef.Id, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetId() string { return v.Id }

// GetName returns ApplicationRef.Name, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetName() string { return v.Name }

// GetRoles returns ApplicationRef.Roles, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetRoles() []*RoleRef { return v.Roles }

// GetEnvironments returns ApplicationRef.Environments, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetEnvironments() []*ApplicationEnvironmentRef { return v.Environments }

// GetTeam returns ApplicationRef.Team, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetTeam() *TeamRef { return v.Team }

// GetPolicies returns ApplicationRef.Policies, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetPolicies() []*PolicyDefinitionRef { return v.Policies }

// GetPolicyEnforcements returns ApplicationRef.PolicyEnforcements, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetPolicyEnforcements() []*PolicyEnforcementRef { return v.PolicyEnforcements }

// GetMetadata returns ApplicationRef.Metadata, and is useful for accessing the field via an interface.
func (v *ApplicationRef) GetMetadata() []*KeyValueRef { return v.Metadata }

type ApplicationRiskStatusRef struct {
	Id                     *string                    `json:"id"`
	RiskStatus             RiskStatus                 `json:"riskStatus"`
	SourceCodeAlerts       *int                       `json:"sourceCodeAlerts"`
	BuildAlerts            *int                       `json:"buildAlerts"`
	ArtifactAlerts         *int                       `json:"artifactAlerts"`
	DeploymentAlerts       *int                       `json:"deploymentAlerts"`
	CreatedAt              *time.Time                 `json:"createdAt"`
	UpdatedAt              *time.Time                 `json:"updatedAt"`
	ApplicationEnvironment *ApplicationEnvironmentRef `json:"applicationEnvironment,omitempty"`
}

// GetId returns ApplicationRiskStatusRef.Id, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetId() *string { return v.Id }

// GetRiskStatus returns ApplicationRiskStatusRef.RiskStatus, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetRiskStatus() RiskStatus { return v.RiskStatus }

// GetSourceCodeAlerts returns ApplicationRiskStatusRef.SourceCodeAlerts, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetSourceCodeAlerts() *int { return v.SourceCodeAlerts }

// GetBuildAlerts returns ApplicationRiskStatusRef.BuildAlerts, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetBuildAlerts() *int { return v.BuildAlerts }

// GetArtifactAlerts returns ApplicationRiskStatusRef.ArtifactAlerts, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetArtifactAlerts() *int { return v.ArtifactAlerts }

// GetDeploymentAlerts returns ApplicationRiskStatusRef.DeploymentAlerts, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetDeploymentAlerts() *int { return v.DeploymentAlerts }

// GetCreatedAt returns ApplicationRiskStatusRef.CreatedAt, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns ApplicationRiskStatusRef.UpdatedAt, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// GetApplicationEnvironment returns ApplicationRiskStatusRef.ApplicationEnvironment, and is useful for accessing the field via an interface.
func (v *ApplicationRiskStatusRef) GetApplicationEnvironment() *ApplicationEnvironmentRef {
	return v.ApplicationEnvironment
}

type CVSSRef struct {
	Type  string `json:"type"`
	Score string `json:"score"`
}

// GetType returns CVSSRef.Type, and is useful for accessing the field via an interface.
func (v *CVSSRef) GetType() string { return v.Type }

// GetScore returns CVSSRef.Score, and is useful for accessing the field via an interface.
func (v *CVSSRef) GetScore() string { return v.Score }

type CWERef struct {
	Id          string `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
}

// GetId returns CWERef.Id, and is useful for accessing the field via an interface.
func (v *CWERef) GetId() string { return v.Id }

// GetName returns CWERef.Name, and is useful for accessing the field via an interface.
func (v *CWERef) GetName() string { return v.Name }

// GetDescription returns CWERef.Description, and is useful for accessing the field via an interface.
func (v *CWERef) GetDescription() string { return v.Description }

type ComponentRef struct {
	Id              string              `json:"id"`
	Type            string              `json:"type"`
	Name            string              `json:"name"`
	Version         string              `json:"version"`
	Licenses        []string            `json:"licenses"`
	Purl            string              `json:"purl"`
	Cpe             string              `json:"cpe"`
	Vulnerabilities []*VulnerabilityRef `json:"vulnerabilities,omitempty"`
	Images          []*ImageScanDataRef `json:"images,omitempty"`
}

// GetId returns ComponentRef.Id, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetId() string { return v.Id }

// GetType returns ComponentRef.Type, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetType() string { return v.Type }

// GetName returns ComponentRef.Name, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetName() string { return v.Name }

// GetVersion returns ComponentRef.Version, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetVersion() string { return v.Version }

// GetLicenses returns ComponentRef.Licenses, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetLicenses() []string { return v.Licenses }

// GetPurl returns ComponentRef.Purl, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetPurl() string { return v.Purl }

// GetCpe returns ComponentRef.Cpe, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetCpe() string { return v.Cpe }

// GetVulnerabilities returns ComponentRef.Vulnerabilities, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetVulnerabilities() []*VulnerabilityRef { return v.Vulnerabilities }

// GetImages returns ComponentRef.Images, and is useful for accessing the field via an interface.
func (v *ComponentRef) GetImages() []*ImageScanDataRef { return v.Images }

type CredentialsRef struct {
	Id         *string        `json:"id"`
	Data       string         `json:"data"`
	Integrator *IntegratorRef `json:"integrator,omitempty"`
}

// GetId returns CredentialsRef.Id, and is useful for accessing the field via an interface.
func (v *CredentialsRef) GetId() *string { return v.Id }

// GetData returns CredentialsRef.Data, and is useful for accessing the field via an interface.
func (v *CredentialsRef) GetData() string { return v.Data }

// GetIntegrator returns CredentialsRef.Integrator, and is useful for accessing the field via an interface.
func (v *CredentialsRef) GetIntegrator() *IntegratorRef { return v.Integrator }

type DatasourceToolRef struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns DatasourceToolRef.Id, and is useful for accessing the field via an interface.
func (v *DatasourceToolRef) GetId() string { return v.Id }

// GetName returns DatasourceToolRef.Name, and is useful for accessing the field via an interface.
func (v *DatasourceToolRef) GetName() string { return v.Name }

// DeploymentStage is an enum denoting the stage of the deployment. .
type DeploymentStage string

const (
	// deployment is discovered from the events
	DeploymentStageDiscovered DeploymentStage = "discovered"
	// deployment is known to have passed the deployment firewall and the deployment(ie the image) is live
	DeploymentStageCurrent DeploymentStage = "current"
	// deployment becomes a past deployment because another fresh deployment has happened
	DeploymentStagePrevious DeploymentStage = "previous"
	// deployment is blocked by the firewall
	DeploymentStageBlocked DeploymentStage = "blocked"
)

type DeploymentTargetRef struct {
	// id is randomly assigned
	Id           string           `json:"id"`
	Name         string           `json:"name"`
	IsFirewall   *bool            `json:"isFirewall"`
	Organization *OrganizationRef `json:"organization,omitempty"`
}

// GetId returns DeploymentTargetRef.Id, and is useful for accessing the field via an interface.
func (v *DeploymentTargetRef) GetId() string { return v.Id }

// GetName returns DeploymentTargetRef.Name, and is useful for accessing the field via an interface.
func (v *DeploymentTargetRef) GetName() string { return v.Name }

// GetIsFirewall returns DeploymentTargetRef.IsFirewall, and is useful for accessing the field via an interface.
func (v *DeploymentTargetRef) GetIsFirewall() *bool { return v.IsFirewall }

// GetOrganization returns DeploymentTargetRef.Organization, and is useful for accessing the field via an interface.
func (v *DeploymentTargetRef) GetOrganization() *OrganizationRef { return v.Organization }

type EnvironmentRef struct {
	Id           string           `json:"id"`
	Organization *OrganizationRef `json:"organization,omitempty"`
	Purpose      string           `json:"purpose"`
}

// GetId returns EnvironmentRef.Id, and is useful for accessing the field via an interface.
func (v *EnvironmentRef) GetId() string { return v.Id }

// GetOrganization returns EnvironmentRef.Organization, and is useful for accessing the field via an interface.
func (v *EnvironmentRef) GetOrganization() *OrganizationRef { return v.Organization }

// GetPurpose returns EnvironmentRef.Purpose, and is useful for accessing the field via an interface.
func (v *EnvironmentRef) GetPurpose() string { return v.Purpose }

type FeatureModeRef struct {
	Id           string           `json:"id"`
	Organization *OrganizationRef `json:"organization,omitempty"`
	Scan         string           `json:"scan"`
	Type         string           `json:"type"`
	Enabled      *bool            `json:"enabled"`
	Category     string           `json:"category"`
	CreatedAt    *time.Time       `json:"createdAt"`
	UpdatedAt    *time.Time       `json:"updatedAt"`
}

// GetId returns FeatureModeRef.Id, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetId() string { return v.Id }

// GetOrganization returns FeatureModeRef.Organization, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetOrganization() *OrganizationRef { return v.Organization }

// GetScan returns FeatureModeRef.Scan, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetScan() string { return v.Scan }

// GetType returns FeatureModeRef.Type, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetType() string { return v.Type }

// GetEnabled returns FeatureModeRef.Enabled, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetEnabled() *bool { return v.Enabled }

// GetCategory returns FeatureModeRef.Category, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetCategory() string { return v.Category }

// GetCreatedAt returns FeatureModeRef.CreatedAt, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns FeatureModeRef.UpdatedAt, and is useful for accessing the field via an interface.
func (v *FeatureModeRef) GetUpdatedAt() *time.Time { return v.UpdatedAt }

type ImageRef struct {
	Id        string              `json:"id"`
	ImageName string              `json:"imageName"`
	ImageTag  string              `json:"imageTag"`
	ImageSha  string              `json:"imageSha"`
	ScanData  []*ImageScanDataRef `json:"scanData,omitempty"`
}

// GetId returns ImageRef.Id, and is useful for accessing the field via an interface.
func (v *ImageRef) GetId() string { return v.Id }

// GetImageName returns ImageRef.ImageName, and is useful for accessing the field via an interface.
func (v *ImageRef) GetImageName() string { return v.ImageName }

// GetImageTag returns ImageRef.ImageTag, and is useful for accessing the field via an interface.
func (v *ImageRef) GetImageTag() string { return v.ImageTag }

// GetImageSha returns ImageRef.ImageSha, and is useful for accessing the field via an interface.
func (v *ImageRef) GetImageSha() string { return v.ImageSha }

// GetScanData returns ImageRef.ScanData, and is useful for accessing the field via an interface.
func (v *ImageRef) GetScanData() []*ImageScanDataRef { return v.ScanData }

type ImageScanDataRef struct {
	Id                string          `json:"id"`
	ImageSha          string          `json:"imageSha"`
	Tool              string          `json:"tool"`
	ImageDetails      *ImageRef       `json:"imageDetails,omitempty"`
	LastScannedAt     *time.Time      `json:"lastScannedAt"`
	Components        []*ComponentRef `json:"components,omitempty"`
	VulnCriticalCount *int            `json:"vulnCriticalCount"`
	VulnHighCount     *int            `json:"vulnHighCount"`
	VulnMediumCount   *int            `json:"vulnMediumCount"`
	VulnLowCount      *int            `json:"vulnLowCount"`
	VulnInfoCount     *int            `json:"vulnInfoCount"`
	VulnUnknownCount  *int            `json:"vulnUnknownCount"`
	VulnNoneCount     *int            `json:"vulnNoneCount"`
	VulnTotalCount    *int            `json:"vulnTotalCount"`
}

// GetId returns ImageScanDataRef.Id, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetId() string { return v.Id }

// GetImageSha returns ImageScanDataRef.ImageSha, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetImageSha() string { return v.ImageSha }

// GetTool returns ImageScanDataRef.Tool, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetTool() string { return v.Tool }

// GetImageDetails returns ImageScanDataRef.ImageDetails, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetImageDetails() *ImageRef { return v.ImageDetails }

// GetLastScannedAt returns ImageScanDataRef.LastScannedAt, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetLastScannedAt() *time.Time { return v.LastScannedAt }

// GetComponents returns ImageScanDataRef.Components, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetComponents() []*ComponentRef { return v.Components }

// GetVulnCriticalCount returns ImageScanDataRef.VulnCriticalCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnCriticalCount() *int { return v.VulnCriticalCount }

// GetVulnHighCount returns ImageScanDataRef.VulnHighCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnHighCount() *int { return v.VulnHighCount }

// GetVulnMediumCount returns ImageScanDataRef.VulnMediumCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnMediumCount() *int { return v.VulnMediumCount }

// GetVulnLowCount returns ImageScanDataRef.VulnLowCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnLowCount() *int { return v.VulnLowCount }

// GetVulnInfoCount returns ImageScanDataRef.VulnInfoCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnInfoCount() *int { return v.VulnInfoCount }

// GetVulnUnknownCount returns ImageScanDataRef.VulnUnknownCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnUnknownCount() *int { return v.VulnUnknownCount }

// GetVulnNoneCount returns ImageScanDataRef.VulnNoneCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnNoneCount() *int { return v.VulnNoneCount }

// GetVulnTotalCount returns ImageScanDataRef.VulnTotalCount, and is useful for accessing the field via an interface.
func (v *ImageScanDataRef) GetVulnTotalCount() *int { return v.VulnTotalCount }

type IntegratorRef struct {
	Id           string           `json:"id"`
	Organization *OrganizationRef `json:"organization,omitempty"`
	Name         string           `json:"name"`
	Type         string           `json:"type"`
	Category     string           `json:"category"`
	Credentials  *CredentialsRef  `json:"credentials,omitempty"`
	CreatedAt    *time.Time       `json:"createdAt"`
	UpdatedAt    *time.Time       `json:"updatedAt"`
}

// GetId returns IntegratorRef.Id, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetId() string { return v.Id }

// GetOrganization returns IntegratorRef.Organization, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetOrganization() *OrganizationRef { return v.Organization }

// GetName returns IntegratorRef.Name, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetName() string { return v.Name }

// GetType returns IntegratorRef.Type, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetType() string { return v.Type }

// GetCategory returns IntegratorRef.Category, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetCategory() string { return v.Category }

// GetCredentials returns IntegratorRef.Credentials, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetCredentials() *CredentialsRef { return v.Credentials }

// GetCreatedAt returns IntegratorRef.CreatedAt, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns IntegratorRef.UpdatedAt, and is useful for accessing the field via an interface.
func (v *IntegratorRef) GetUpdatedAt() *time.Time { return v.UpdatedAt }

type KeyValueRef struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

// GetName returns KeyValueRef.Name, and is useful for accessing the field via an interface.
func (v *KeyValueRef) GetName() string { return v.Name }

// GetValue returns KeyValueRef.Value, and is useful for accessing the field via an interface.
func (v *KeyValueRef) GetValue() string { return v.Value }

type OrganizationRef struct {
	// id is randomly assigned
	Id                 string                  `json:"id"`
	Name               string                  `json:"name"`
	Roles              []*RoleRef              `json:"roles,omitempty"`
	Teams              []*TeamRef              `json:"teams,omitempty"`
	Environments       []*DeploymentTargetRef  `json:"environments,omitempty"`
	Policies           []*PolicyDefinitionRef  `json:"policies,omitempty"`
	PolicyEnforcements []*PolicyEnforcementRef `json:"policyEnforcements,omitempty"`
	Integrators        []*IntegratorRef        `json:"integrators,omitempty"`
	FeatureModes       []*FeatureModeRef       `json:"featureModes,omitempty"`
}

// GetId returns OrganizationRef.Id, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetId() string { return v.Id }

// GetName returns OrganizationRef.Name, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetName() string { return v.Name }

// GetRoles returns OrganizationRef.Roles, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetRoles() []*RoleRef { return v.Roles }

// GetTeams returns OrganizationRef.Teams, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetTeams() []*TeamRef { return v.Teams }

// GetEnvironments returns OrganizationRef.Environments, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetEnvironments() []*DeploymentTargetRef { return v.Environments }

// GetPolicies returns OrganizationRef.Policies, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetPolicies() []*PolicyDefinitionRef { return v.Policies }

// GetPolicyEnforcements returns OrganizationRef.PolicyEnforcements, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetPolicyEnforcements() []*PolicyEnforcementRef {
	return v.PolicyEnforcements
}

// GetIntegrators returns OrganizationRef.Integrators, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetIntegrators() []*IntegratorRef { return v.Integrators }

// GetFeatureModes returns OrganizationRef.FeatureModes, and is useful for accessing the field via an interface.
func (v *OrganizationRef) GetFeatureModes() []*FeatureModeRef { return v.FeatureModes }

type PolicyDefinitionRef struct {
	Id               string               `json:"id"`
	OwnerOrg         *OrganizationRef     `json:"ownerOrg,omitempty"`
	OwnerTeam        *TeamRef             `json:"ownerTeam,omitempty"`
	OwnerApplication *ApplicationRef      `json:"ownerApplication,omitempty"`
	CreatedAt        *time.Time           `json:"createdAt"`
	UpdatedAt        *time.Time           `json:"updatedAt"`
	PolicyName       string               `json:"policyName"`
	Category         string               `json:"category"`
	Stage            string               `json:"stage"`
	Description      string               `json:"description"`
	ScheduledPolicy  *bool                `json:"scheduledPolicy"`
	Script           string               `json:"script"`
	DatasourceTool   []*DatasourceToolRef `json:"datasourceTool,omitempty"`
	Variables        string               `json:"variables"`
	ConditionName    string               `json:"conditionName"`
	Suggestion       string               `json:"suggestion"`
}

// GetId returns PolicyDefinitionRef.Id, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetId() string { return v.Id }

// GetOwnerOrg returns PolicyDefinitionRef.OwnerOrg, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetOwnerOrg() *OrganizationRef { return v.OwnerOrg }

// GetOwnerTeam returns PolicyDefinitionRef.OwnerTeam, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetOwnerTeam() *TeamRef { return v.OwnerTeam }

// GetOwnerApplication returns PolicyDefinitionRef.OwnerApplication, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetOwnerApplication() *ApplicationRef { return v.OwnerApplication }

// GetCreatedAt returns PolicyDefinitionRef.CreatedAt, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns PolicyDefinitionRef.UpdatedAt, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// GetPolicyName returns PolicyDefinitionRef.PolicyName, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetPolicyName() string { return v.PolicyName }

// GetCategory returns PolicyDefinitionRef.Category, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetCategory() string { return v.Category }

// GetStage returns PolicyDefinitionRef.Stage, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetStage() string { return v.Stage }

// GetDescription returns PolicyDefinitionRef.Description, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetDescription() string { return v.Description }

// GetScheduledPolicy returns PolicyDefinitionRef.ScheduledPolicy, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetScheduledPolicy() *bool { return v.ScheduledPolicy }

// GetScript returns PolicyDefinitionRef.Script, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetScript() string { return v.Script }

// GetDatasourceTool returns PolicyDefinitionRef.DatasourceTool, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetDatasourceTool() []*DatasourceToolRef { return v.DatasourceTool }

// GetVariables returns PolicyDefinitionRef.Variables, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetVariables() string { return v.Variables }

// GetConditionName returns PolicyDefinitionRef.ConditionName, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetConditionName() string { return v.ConditionName }

// GetSuggestion returns PolicyDefinitionRef.Suggestion, and is useful for accessing the field via an interface.
func (v *PolicyDefinitionRef) GetSuggestion() string { return v.Suggestion }

type PolicyEnforcementRef struct {
	Id                  *string              `json:"id"`
	Policy              *PolicyDefinitionRef `json:"policy,omitempty"`
	EnforcedOrg         *OrganizationRef     `json:"enforcedOrg,omitempty"`
	EnforcedTeam        *TeamRef             `json:"enforcedTeam,omitempty"`
	EnforcedApplication *ApplicationRef      `json:"enforcedApplication,omitempty"`
	Status              *bool                `json:"status"`
	ForceApply          *bool                `json:"forceApply"`
	Severity            Severity             `json:"severity"`
	Action              string               `json:"action"`
	ConditionValue      string               `json:"conditionValue"`
	Environments        []*EnvironmentRef    `json:"environments,omitempty"`
	Tags                []*TagRef            `json:"tags,omitempty"`
	CreatedAt           *time.Time           `json:"createdAt"`
	UpdatedAt           *time.Time           `json:"updatedAt"`
}

// GetId returns PolicyEnforcementRef.Id, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetId() *string { return v.Id }

// GetPolicy returns PolicyEnforcementRef.Policy, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetPolicy() *PolicyDefinitionRef { return v.Policy }

// GetEnforcedOrg returns PolicyEnforcementRef.EnforcedOrg, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetEnforcedOrg() *OrganizationRef { return v.EnforcedOrg }

// GetEnforcedTeam returns PolicyEnforcementRef.EnforcedTeam, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetEnforcedTeam() *TeamRef { return v.EnforcedTeam }

// GetEnforcedApplication returns PolicyEnforcementRef.EnforcedApplication, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetEnforcedApplication() *ApplicationRef { return v.EnforcedApplication }

// GetStatus returns PolicyEnforcementRef.Status, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetStatus() *bool { return v.Status }

// GetForceApply returns PolicyEnforcementRef.ForceApply, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetForceApply() *bool { return v.ForceApply }

// GetSeverity returns PolicyEnforcementRef.Severity, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetSeverity() Severity { return v.Severity }

// GetAction returns PolicyEnforcementRef.Action, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetAction() string { return v.Action }

// GetConditionValue returns PolicyEnforcementRef.ConditionValue, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetConditionValue() string { return v.ConditionValue }

// GetEnvironments returns PolicyEnforcementRef.Environments, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetEnvironments() []*EnvironmentRef { return v.Environments }

// GetTags returns PolicyEnforcementRef.Tags, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetTags() []*TagRef { return v.Tags }

// GetCreatedAt returns PolicyEnforcementRef.CreatedAt, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns PolicyEnforcementRef.UpdatedAt, and is useful for accessing the field via an interface.
func (v *PolicyEnforcementRef) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// RiskStatus tells us what risk a current application instance or a deployment is at.
type RiskStatus string

const (
	RiskStatusLowrisk        RiskStatus = "lowrisk"
	RiskStatusMediumrisk     RiskStatus = "mediumrisk"
	RiskStatusHighrisk       RiskStatus = "highrisk"
	RiskStatusApocalypserisk RiskStatus = "apocalypserisk"
	RiskStatusInprogress     RiskStatus = "inprogress"
)

type RolePermission string

const (
	RolePermissionAdmin RolePermission = "admin"
	RolePermissionWrite RolePermission = "write"
	RolePermissionRead  RolePermission = "read"
)

type RoleRef struct {
	// id is randomly assigned
	Id string `json:"id"`
	// group should be a URI format that includes a scope or realm
	Group      string         `json:"group"`
	Permission RolePermission `json:"permission"`
}

// GetId returns RoleRef.Id, and is useful for accessing the field via an interface.
func (v *RoleRef) GetId() string { return v.Id }

// GetGroup returns RoleRef.Group, and is useful for accessing the field via an interface.
func (v *RoleRef) GetGroup() string { return v.Group }

// GetPermission returns RoleRef.Permission, and is useful for accessing the field via an interface.
func (v *RoleRef) GetPermission() RolePermission { return v.Permission }

type RunHistoryRef struct {
	Id                    *string                   `json:"id"`
	PolicyId              string                    `json:"policyId"`
	ApplicationDeployment *ApplicationDeploymentRef `json:"applicationDeployment,omitempty"`
	PolicyName            string                    `json:"PolicyName"`
	Severity              Severity                  `json:"Severity"`
	Stage                 string                    `json:"Stage"`
	Image                 string                    `json:"Image"`
	ImageTag              string                    `json:"ImageTag"`
	ImageSha              string                    `json:"ImageSha"`
	Status                string                    `json:"Status"`
	DatasourceTool        string                    `json:"DatasourceTool"`
	AlertTitle            string                    `json:"AlertTitle"`
	AlertMessage          string                    `json:"AlertMessage"`
	Suggestions           string                    `json:"Suggestions"`
	Reason                string                    `json:"Reason"`
	CreatedAt             *time.Time                `json:"CreatedAt"`
	UpdatedAt             *time.Time                `json:"UpdatedAt"`
	DeployedAt            *time.Time                `json:"DeployedAt"`
	Action                string                    `json:"Action"`
	Hash                  string                    `json:"Hash"`
	Error                 string                    `json:"Error"`
	Pass                  *bool                     `json:"Pass"`
	MetaData              string                    `json:"MetaData"`
	ScheduledPolicy       *bool                     `json:"scheduledPolicy"`
	PolicyEnforcements    *PolicyEnforcementRef     `json:"policyEnforcements,omitempty"`
}

// GetId returns RunHistoryRef.Id, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetId() *string { return v.Id }

// GetPolicyId returns RunHistoryRef.PolicyId, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetPolicyId() string { return v.PolicyId }

// GetApplicationDeployment returns RunHistoryRef.ApplicationDeployment, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetApplicationDeployment() *ApplicationDeploymentRef {
	return v.ApplicationDeployment
}

// GetPolicyName returns RunHistoryRef.PolicyName, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetPolicyName() string { return v.PolicyName }

// GetSeverity returns RunHistoryRef.Severity, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetSeverity() Severity { return v.Severity }

// GetStage returns RunHistoryRef.Stage, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetStage() string { return v.Stage }

// GetImage returns RunHistoryRef.Image, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetImage() string { return v.Image }

// GetImageTag returns RunHistoryRef.ImageTag, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetImageTag() string { return v.ImageTag }

// GetImageSha returns RunHistoryRef.ImageSha, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetImageSha() string { return v.ImageSha }

// GetStatus returns RunHistoryRef.Status, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetStatus() string { return v.Status }

// GetDatasourceTool returns RunHistoryRef.DatasourceTool, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetDatasourceTool() string { return v.DatasourceTool }

// GetAlertTitle returns RunHistoryRef.AlertTitle, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetAlertTitle() string { return v.AlertTitle }

// GetAlertMessage returns RunHistoryRef.AlertMessage, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetAlertMessage() string { return v.AlertMessage }

// GetSuggestions returns RunHistoryRef.Suggestions, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetSuggestions() string { return v.Suggestions }

// GetReason returns RunHistoryRef.Reason, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetReason() string { return v.Reason }

// GetCreatedAt returns RunHistoryRef.CreatedAt, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns RunHistoryRef.UpdatedAt, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// GetDeployedAt returns RunHistoryRef.DeployedAt, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetDeployedAt() *time.Time { return v.DeployedAt }

// GetAction returns RunHistoryRef.Action, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetAction() string { return v.Action }

// GetHash returns RunHistoryRef.Hash, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetHash() string { return v.Hash }

// GetError returns RunHistoryRef.Error, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetError() string { return v.Error }

// GetPass returns RunHistoryRef.Pass, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetPass() *bool { return v.Pass }

// GetMetaData returns RunHistoryRef.MetaData, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetMetaData() string { return v.MetaData }

// GetScheduledPolicy returns RunHistoryRef.ScheduledPolicy, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetScheduledPolicy() *bool { return v.ScheduledPolicy }

// GetPolicyEnforcements returns RunHistoryRef.PolicyEnforcements, and is useful for accessing the field via an interface.
func (v *RunHistoryRef) GetPolicyEnforcements() *PolicyEnforcementRef { return v.PolicyEnforcements }

type Severity string

const (
	SeverityCritical Severity = "critical"
	SeverityHigh     Severity = "high"
	SeverityMedium   Severity = "medium"
	SeverityLow      Severity = "low"
	SeverityInfo     Severity = "info"
	SeverityNone     Severity = "none"
	SeverityUnknown  Severity = "unknown"
)

type TagRef struct {
	Id             *string                 `json:"id"`
	TagName        string                  `json:"tagName"`
	TagValue       string                  `json:"tagValue"`
	TagDescription string                  `json:"tagDescription"`
	CreatedBy      string                  `json:"createdBy"`
	CreatedAt      *time.Time              `json:"createdAt"`
	UpdatedAt      *time.Time              `json:"updatedAt"`
	Policies       []*PolicyEnforcementRef `json:"policies,omitempty"`
}

// GetId returns TagRef.Id, and is useful for accessing the field via an interface.
func (v *TagRef) GetId() *string { return v.Id }

// GetTagName returns TagRef.TagName, and is useful for accessing the field via an interface.
func (v *TagRef) GetTagName() string { return v.TagName }

// GetTagValue returns TagRef.TagValue, and is useful for accessing the field via an interface.
func (v *TagRef) GetTagValue() string { return v.TagValue }

// GetTagDescription returns TagRef.TagDescription, and is useful for accessing the field via an interface.
func (v *TagRef) GetTagDescription() string { return v.TagDescription }

// GetCreatedBy returns TagRef.CreatedBy, and is useful for accessing the field via an interface.
func (v *TagRef) GetCreatedBy() string { return v.CreatedBy }

// GetCreatedAt returns TagRef.CreatedAt, and is useful for accessing the field via an interface.
func (v *TagRef) GetCreatedAt() *time.Time { return v.CreatedAt }

// GetUpdatedAt returns TagRef.UpdatedAt, and is useful for accessing the field via an interface.
func (v *TagRef) GetUpdatedAt() *time.Time { return v.UpdatedAt }

// GetPolicies returns TagRef.Policies, and is useful for accessing the field via an interface.
func (v *TagRef) GetPolicies() []*PolicyEnforcementRef { return v.Policies }

type TeamRef struct {
	// id is randomly assigned
	Id                 string                  `json:"id"`
	Name               string                  `json:"name"`
	Roles              []*RoleRef              `json:"roles,omitempty"`
	Organization       *OrganizationRef        `json:"organization,omitempty"`
	Applications       []*ApplicationRef       `json:"applications,omitempty"`
	Labels             []*KeyValueRef          `json:"labels,omitempty"`
	Policies           []*PolicyDefinitionRef  `json:"policies,omitempty"`
	PolicyEnforcements []*PolicyEnforcementRef `json:"policyEnforcements,omitempty"`
}

// GetId returns TeamRef.Id, and is useful for accessing the field via an interface.
func (v *TeamRef) GetId() string { return v.Id }

// GetName returns TeamRef.Name, and is useful for accessing the field via an interface.
func (v *TeamRef) GetName() string { return v.Name }

// GetRoles returns TeamRef.Roles, and is useful for accessing the field via an interface.
func (v *TeamRef) GetRoles() []*RoleRef { return v.Roles }

// GetOrganization returns TeamRef.Organization, and is useful for accessing the field via an interface.
func (v *TeamRef) GetOrganization() *OrganizationRef { return v.Organization }

// GetApplications returns TeamRef.Applications, and is useful for accessing the field via an interface.
func (v *TeamRef) GetApplications() []*ApplicationRef { return v.Applications }

// GetLabels returns TeamRef.Labels, and is useful for accessing the field via an interface.
func (v *TeamRef) GetLabels() []*KeyValueRef { return v.Labels }

// GetPolicies returns TeamRef.Policies, and is useful for accessing the field via an interface.
func (v *TeamRef) GetPolicies() []*PolicyDefinitionRef { return v.Policies }

// GetPolicyEnforcements returns TeamRef.PolicyEnforcements, and is useful for accessing the field via an interface.
func (v *TeamRef) GetPolicyEnforcements() []*PolicyEnforcementRef { return v.PolicyEnforcements }

type ToolsUsedRef struct {
	Id       *string `json:"id"`
	Source   string  `json:"source"`
	Build    string  `json:"build"`
	Artifact string  `json:"artifact"`
	Deploy   string  `json:"deploy"`
	Sbom     string  `json:"sbom"`
}

// GetId returns ToolsUsedRef.Id, and is useful for accessing the field via an interface.
func (v *ToolsUsedRef) GetId() *string { return v.Id }

// GetSource returns ToolsUsedRef.Source, and is useful for accessing the field via an interface.
func (v *ToolsUsedRef) GetSource() string { return v.Source }

// GetBuild returns ToolsUsedRef.Build, and is useful for accessing the field via an interface.
func (v *ToolsUsedRef) GetBuild() string { return v.Build }

// GetArtifact returns ToolsUsedRef.Artifact, and is useful for accessing the field via an interface.
func (v *ToolsUsedRef) GetArtifact() string { return v.Artifact }

// GetDeploy returns ToolsUsedRef.Deploy, and is useful for accessing the field via an interface.
func (v *ToolsUsedRef) GetDeploy() string { return v.Deploy }

// GetSbom returns ToolsUsedRef.Sbom, and is useful for accessing the field via an interface.
func (v *ToolsUsedRef) GetSbom() string { return v.Sbom }

type VulnerabilityRef struct {
	Id             string          `json:"id"`
	Parent         string          `json:"parent"`
	Ratings        Severity        `json:"ratings"`
	Cwes           []*CWERef       `json:"cwes,omitempty"`
	Summary        string          `json:"summary"`
	Detail         string          `json:"detail"`
	Recommendation string          `json:"recommendation"`
	Published      *time.Time      `json:"published"`
	Modified       *time.Time      `json:"modified"`
	Cvss           []*CVSSRef      `json:"cvss,omitempty"`
	Affects        []*ComponentRef `json:"affects,omitempty"`
}

// GetId returns VulnerabilityRef.Id, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetId() string { return v.Id }

// GetParent returns VulnerabilityRef.Parent, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetParent() string { return v.Parent }

// GetRatings returns VulnerabilityRef.Ratings, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetRatings() Severity { return v.Ratings }

// GetCwes returns VulnerabilityRef.Cwes, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetCwes() []*CWERef { return v.Cwes }

// GetSummary returns VulnerabilityRef.Summary, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetSummary() string { return v.Summary }

// GetDetail returns VulnerabilityRef.Detail, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetDetail() string { return v.Detail }

// GetRecommendation returns VulnerabilityRef.Recommendation, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetRecommendation() string { return v.Recommendation }

// GetPublished returns VulnerabilityRef.Published, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetPublished() *time.Time { return v.Published }

// GetModified returns VulnerabilityRef.Modified, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetModified() *time.Time { return v.Modified }

// GetCvss returns VulnerabilityRef.Cvss, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetCvss() []*CVSSRef { return v.Cvss }

// GetAffects returns VulnerabilityRef.Affects, and is useful for accessing the field via an interface.
func (v *VulnerabilityRef) GetAffects() []*ComponentRef { return v.Affects }

// __AddPolicyDefinitionInput is used internally by genqlient
type __AddPolicyDefinitionInput struct {
	Input []*AddPolicyDefinitionInput `json:"input,omitempty"`
}

// GetInput returns __AddPolicyDefinitionInput.Input, and is useful for accessing the field via an interface.
func (v *__AddPolicyDefinitionInput) GetInput() []*AddPolicyDefinitionInput { return v.Input }

// __AddPolicyEnforcementInput is used internally by genqlient
type __AddPolicyEnforcementInput struct {
	Input []*AddPolicyEnforcementInput `json:"input,omitempty"`
}

// GetInput returns __AddPolicyEnforcementInput.Input, and is useful for accessing the field via an interface.
func (v *__AddPolicyEnforcementInput) GetInput() []*AddPolicyEnforcementInput { return v.Input }

// The query or mutation executed by AddPolicyDefinition.
const AddPolicyDefinition_Operation = `
mutation AddPolicyDefinition ($input: [AddPolicyDefinitionInput!]!) {
	addPolicyDefinition(input: $input) {
		numUids
	}
}
`

func AddPolicyDefinition(
	ctx_ context.Context,
	client_ graphql.Client,
	input []*AddPolicyDefinitionInput,
) (*AddPolicyDefinitionResponse, error) {
	req_ := &graphql.Request{
		OpName: "AddPolicyDefinition",
		Query:  AddPolicyDefinition_Operation,
		Variables: &__AddPolicyDefinitionInput{
			Input: input,
		},
	}
	var err_ error

	var data_ AddPolicyDefinitionResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by AddPolicyEnforcement.
const AddPolicyEnforcement_Operation = `
mutation AddPolicyEnforcement ($input: [AddPolicyEnforcementInput!]!) {
	addPolicyEnforcement(input: $input) {
		numUids
	}
}
`

func AddPolicyEnforcement(
	ctx_ context.Context,
	client_ graphql.Client,
	input []*AddPolicyEnforcementInput,
) (*AddPolicyEnforcementResponse, error) {
	req_ := &graphql.Request{
		OpName: "AddPolicyEnforcement",
		Query:  AddPolicyEnforcement_Operation,
		Variables: &__AddPolicyEnforcementInput{
			Input: input,
		},
	}
	var err_ error

	var data_ AddPolicyEnforcementResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
